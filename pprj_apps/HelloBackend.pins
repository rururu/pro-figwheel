; Thu Dec 07 11:32:34 MSK 2023
; 
;+ (version "3.5")
;+ (build "Build 663")

([HelloBackend_Class0] of  CloProgram

	(cloFunctions
		[HelloBackend_Class2]
		[HelloBackend_Class3]
		[HelloBackend_Class4]
		[HelloBackend_Class6])
	(cloNamespace [HelloBackend_Class1])
	(cloVars [HelloBackend_Class5])
	(title "Backend"))

([HelloBackend_Class1] of  CloNamespace

	(source "(:use\n  protege.core)\n(:require\n  [compojure.core :refer [defroutes GET POST]]\n  [compojure.route :as route]\n  [org.httpkit.server :refer [run-server]])")
	(title "backend.core"))

([HelloBackend_Class10] of  CloFuncall

	(source "(in-ns 'backend.core)"))

([HelloBackend_Class10000] of  BackendGUI

	(source "Good by."))

([HelloBackend_Class10001] of  CljsProgram

	(cloFunctions
		[HelloBackend_Class10003]
		[HelloBackend_Class10004]
		[HelloBackend_Class10005]
		[HelloBackend_Class10006])
	(cloNamespace [HelloBackend_Class10002])
	(cloVars [HelloBackend_Class10007])
	(css [HelloBackend_Class10009])
	(epilogue "(js/setInterval get-backend 4000)")
	(html [HelloBackend_Class10008])
	(title "Hello Backend"))

([HelloBackend_Class10002] of  CloNamespace

	(source "(:require \n  [ajax.core :refer [GET]])")
	(title "hello.frontend"))

([HelloBackend_Class10003] of  CloFunction

	(source "(js/document.getElementById id)")
	(title "get-element [id]"))

([HelloBackend_Class10004] of  CloFunction

	(source "(set! (.-innerHTML (get-element id)) html)")
	(title "set-element [id html]"))

([HelloBackend_Class10005] of  CloFunction

	(source "(set-element \"bkd\" (str \"<h2>\" response \"</h2>\"))")
	(title "handler [response]"))

([HelloBackend_Class10006] of  CloFunction

	(source "(GET \"http://localhost:8888/\" \n  {:handler handler\n    :error-handler error-handler})")
	(title "get-backend []"))

([HelloBackend_Class10007] of  CloVar

	(source "(fn [response]\n  (let [{:keys [status status-text]} response]\n    (println (str \"AJAX ERROR: \" status \" \" status-text))))")
	(title "error-handler"))

([HelloBackend_Class10008] of  HTML

	(save-in "resources/public")
	(source "<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello Page</title>\n    <link rel=\"stylesheet\" href=\"css/hello_backend.css\">\n  </head>\n  <body>\n    <h1>Hello Backend!</h1>\n    <div id=\"bkd\"></div>\n    <script src=\"cljs-out/dev-main.js\"></script>\n  </body>\n</html>")
	(title "index"))

([HelloBackend_Class10009] of  CSS

	(save-in "resources/public/css")
	(source "h1 {\n    font-family: HelveticaNeue, Helvetica;\n    color: #F80;\n}\nh2 {\n    font-family: HelveticaNeue, Helvetica;\n    color: #800;\n}")
	(title "hello_backend"))

([HelloBackend_Class10010] of  FigwheelController

	(cljs-program [HelloBackend_Class10001])
	(title "FigwheelController"))

([HelloBackend_Class11] of  CloFuncall

	(source "(restart-server)"))

([HelloBackend_Class12] of  CloFuncall

	(source "(stop-server)"))

([HelloBackend_Class13] of  CloFuncall

	(source "(cls-instances \"BackendGUI\")"))

([HelloBackend_Class14] of  CloFuncall

	(source "(cls \"BackendGUI\")"))

([HelloBackend_Class2] of  CloFunction

	(source "(reset! server (run-server app {:port 8888}))\n(println \"Backend server started on port 8888..\")")
	(title "start-server []"))

([HelloBackend_Class3] of  CloFunction

	(source "(when @server\n  (@server :timeout 100)\n  (println \"Server stopped on port 8888.\"))")
	(title "stop-server []"))

([HelloBackend_Class4] of  CloFunction

	(source "(stop-server)\n(start-server)")
	(title "restart-server []"))

([HelloBackend_Class5] of  CloVar

	(source "(do\n  (defonce server (atom nil))\n\n  (defn backend-response [] nil)\n\n  (defroutes app\n    (GET \"/\" [] {:status 200\n                      :headers {\"Access-Control-Allow-Origin\" \"*\"}\n                      :body (backend-response)})))")
	(title "init-server"))

([HelloBackend_Class6] of  CloFunction

	(source "(if-let [beg (and (cls \"BackendGUI\") (first (cls-instances \"BackendGUI\")))]\n  (str \"<b2>\" (sv beg \"source\") \"</b2>\")\n  (str \"<b3>Create on the server a class \\\"BackendGUI\\\" with\n                   a slot \\\"source\\\" and fill the slot with a text.</b2>\"))")
	(title "backend-response []"))

([HelloBackend_Class7] of  CloFuncall

	(source "(in-ns 'hello.backend)"))

([HelloBackend_Class8] of  CloFuncall

	(source "(start-server)"))

([HelloBackend_Class9] of  CloFuncall

	(source "(in-ns 'backend.core"))
